{
    "sourceFile": "app/Http/Controllers/Auth/RegisterController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1727924209899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1727924240334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,10 @@\n use App\\Models\\User;\n use Illuminate\\Foundation\\Auth\\RegistersUsers;\n use Illuminate\\Support\\Facades\\Hash;\n use Illuminate\\Support\\Facades\\Validator;\n+use Illuminate\\Foundation\\Auth\\AuthenticatesUsers;\n+use Illuminate\\Support\\Facades\\Auth;\n \n class RegisterController extends Controller\n {\n     /*\n"
                },
                {
                    "date": 1727924281602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,8 @@\n use App\\Models\\User;\n use Illuminate\\Foundation\\Auth\\RegistersUsers;\n use Illuminate\\Support\\Facades\\Hash;\n use Illuminate\\Support\\Facades\\Validator;\n-use Illuminate\\Foundation\\Auth\\AuthenticatesUsers;\n-use Illuminate\\Support\\Facades\\Auth;\n \n class RegisterController extends Controller\n {\n     /*\n@@ -29,23 +27,10 @@\n      * Where to redirect users after registration.\n      *\n      * @var string\n      */\n-    // protected $redirectTo = '/';\n+    protected $redirectTo = '/';\n \n-    protected function redirectTo()\n-    {\n-        $user = Auth::user();\n-\n-        if ($user->hasRole('super-admin') || $user->hasRole('admin')) {\n-            return '/admin-dashboard';  // Halaman dashboard admin\n-        } elseif ($user->hasRole('user')) {\n-            return '/user-dashboard';  // Halaman dashboard user\n-        }\n-\n-        return '/';  // Jika tidak ada role yang sesuai\n-    }\n-\n     /**\n      * Create a new controller instance.\n      *\n      * @return void\n"
                },
                {
                    "date": 1727935097451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,7 +66,8 @@\n         return User::create([\n             'name' => $data['name'],\n             'email' => $data['email'],\n             'password' => Hash::make($data['password']),\n+            'role' => 'user',\n         ]);\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727935355075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,8 +66,8 @@\n         return User::create([\n             'name' => $data['name'],\n             'email' => $data['email'],\n             'password' => Hash::make($data['password']),\n-            'role' => 'user',\n+            // 'role' => 'user',\n         ]);\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727935473562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,47 +6,21 @@\n use App\\Models\\User;\n use Illuminate\\Foundation\\Auth\\RegistersUsers;\n use Illuminate\\Support\\Facades\\Hash;\n use Illuminate\\Support\\Facades\\Validator;\n+use Spatie\\Permission\\Models\\Role;\n \n class RegisterController extends Controller\n {\n-    /*\n-    |--------------------------------------------------------------------------\n-    | Register Controller\n-    |--------------------------------------------------------------------------\n-    |\n-    | This controller handles the registration of new users as well as their\n-    | validation and creation. By default this controller uses a trait to\n-    | provide this functionality without requiring any additional code.\n-    |\n-    */\n-\n     use RegistersUsers;\n \n-    /**\n-     * Where to redirect users after registration.\n-     *\n-     * @var string\n-     */\n     protected $redirectTo = '/';\n \n-    /**\n-     * Create a new controller instance.\n-     *\n-     * @return void\n-     */\n     public function __construct()\n     {\n         $this->middleware('guest');\n     }\n \n-    /**\n-     * Get a validator for an incoming registration request.\n-     *\n-     * @param  array  $data\n-     * @return \\Illuminate\\Contracts\\Validation\\Validator\n-     */\n     protected function validator(array $data)\n     {\n         return Validator::make($data, [\n             'name' => ['required', 'string', 'max:255'],\n@@ -54,20 +28,21 @@\n             'password' => ['required', 'string', 'min:8', 'confirmed'],\n         ]);\n     }\n \n-    /**\n-     * Create a new user instance after a valid registration.\n-     *\n-     * @param  array  $data\n-     * @return \\App\\Models\\User\n-     */\n     protected function create(array $data)\n     {\n-        return User::create([\n-            'name' => $data['name'],\n-            'email' => $data['email'],\n-            'password' => Hash::make($data['password']),\n-            // 'role' => 'user',\n-        ]);\n+        // Use database transactions to ensure data consistency\n+        return \\DB::transaction(function () use ($data) {\n+            $user = User::create([\n+                'name' => $data['name'],\n+                'email' => $data['email'],\n+                'password' => Hash::make($data['password']),\n+            ]);\n+\n+            // Assign default role 'user'\n+            $user->assignRole('user');\n+\n+            return $user;\n+        });\n     }\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1727924209899,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\Auth;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\User;\nuse Illuminate\\Foundation\\Auth\\RegistersUsers;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Support\\Facades\\Validator;\n\nclass RegisterController extends Controller\n{\n    /*\n    |--------------------------------------------------------------------------\n    | Register Controller\n    |--------------------------------------------------------------------------\n    |\n    | This controller handles the registration of new users as well as their\n    | validation and creation. By default this controller uses a trait to\n    | provide this functionality without requiring any additional code.\n    |\n    */\n\n    use RegistersUsers;\n\n    /**\n     * Where to redirect users after registration.\n     *\n     * @var string\n     */\n    // protected $redirectTo = '/';\n\n    protected function redirectTo()\n    {\n        $user = Auth::user();\n\n        if ($user->hasRole('super-admin') || $user->hasRole('admin')) {\n            return '/admin-dashboard';  // Halaman dashboard admin\n        } elseif ($user->hasRole('user')) {\n            return '/user-dashboard';  // Halaman dashboard user\n        }\n\n        return '/';  // Jika tidak ada role yang sesuai\n    }\n\n    /**\n     * Create a new controller instance.\n     *\n     * @return void\n     */\n    public function __construct()\n    {\n        $this->middleware('guest');\n    }\n\n    /**\n     * Get a validator for an incoming registration request.\n     *\n     * @param  array  $data\n     * @return \\Illuminate\\Contracts\\Validation\\Validator\n     */\n    protected function validator(array $data)\n    {\n        return Validator::make($data, [\n            'name' => ['required', 'string', 'max:255'],\n            'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],\n            'password' => ['required', 'string', 'min:8', 'confirmed'],\n        ]);\n    }\n\n    /**\n     * Create a new user instance after a valid registration.\n     *\n     * @param  array  $data\n     * @return \\App\\Models\\User\n     */\n    protected function create(array $data)\n    {\n        return User::create([\n            'name' => $data['name'],\n            'email' => $data['email'],\n            'password' => Hash::make($data['password']),\n        ]);\n    }\n}"
        }
    ]
}